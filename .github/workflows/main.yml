
# name: Publish Docker Images and Deploy to EC2

# on:
#   push:
#     branches: ['main']
#   pull_request:
#     branches: ['main']

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       # - name: Build and Push the "web" Docker image
#       #   run: |
#       #     docker build -t ${{ secrets.DOCKER_USERNAME }}/web -f Dockerfile .
#       #     docker push ${{ secrets.DOCKER_USERNAME }}/web
      
#       # - name: Build and Push the "redis" Docker image
#       #   run: |
#       #     docker build -t ${{ secrets.DOCKER_USERNAME }}/redis -f ./redis/Dockerfile .
#       #     docker push ${{ secrets.DOCKER_USERNAME }}/redis

#       - name: Build and Push the "nginx" Docker image
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx -f ./nginx/Dockerfile .
#           docker push ${{ secrets.DOCKER_USERNAME }}/nginx
      
#       # - name: Create PEM file from secret
#       #   run: |
#       #     mkdir -p ~/.ssh/
#       #     echo "${{ secrets.EC2_SSH }}" > ~/.ssh/server.pem
#       #     chmod 400 ~/.ssh/server.pem

#       # - name: Deploy to EC2
#       #   run: |
#       #     ssh -T -o StrictHostKeyChecking=no -i ~/.ssh/server.pem ${{ secrets.USER_NAME }}@${{ secrets.HOSTNAME }} << 'EOF'
#       #       sudo apt-get update
#       #       sudo docker system prune -af
#       #       sudo docker pull ${{ secrets.DOCKER_USERNAME }}/web
#       #       sudo docker pull ${{ secrets.DOCKER_USERNAME }}/redis
#       #       sudo docker run ${{ secrets.DOCKER_USERNAME }}/web -d
#       #       sudo docker run ${{ secrets.DOCKER_USERNAME }}/redis -d
#       #     EOF



name: Build and Push Docker Image to Docker Hub

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: https://hub.docker.com
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker compose build --no-cache --force-rm
  
  # test:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Test the Docker image
  #       run: docker-compose up -d 
  
  push_to_registry:
    # needs: test
    needs: build
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      # - name: Check out the repo
      #   uses: actions/checkout@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}"
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gnewsapi:latest
          labels: ${{ steps.meta.outputs.labels }}